; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = esp32env

[env:esp32env]
platform = espressif32
board = esp32dev
board_build.f_cpu = 160000000L
framework = arduino
monitor_speed = 115200
upload_speed = 215200
extra_scripts = 
	pre:scripts/timelib_fix.py
; CONFIG_ASYNC_TCP_RUNNING_CORE is workaround for the Asynctcp WDT bug during long log download.
build_flags = 
	-D ENABLE_CORS
	-D CORS_ORIGIN=\"http://localhost:3000\"
    ; -D CONFIG_ASYNC_TCP_RUNNING_CORE
lib_deps =
	ArduinoJson@>=6.0.0,<7.0.0
	https://github.com/me-no-dev/ESPAsyncWebServer
	knolleary/PubSubClient@>=2.8
	adafruit/Adafruit BMP280 Library@>=2.1.0
	adafruit/Adafruit BMP085 Library@>=1.1.0
	adafruit/DHT sensor library@>=1.4.0
	adafruit/Adafruit Unified Sensor@>=1.1.4
monitor_filters = colorize, esp32_exception_decoder

[env:esp32envDebug]
platform = espressif32
board = esp32dev
board_build.f_cpu = 160000000L
framework = arduino
monitor_speed = 115200
upload_speed = 915200
extra_scripts = 
	pre:scripts/timelib_fix.py
; CONFIG_ASYNC_TCP_RUNNING_CORE is workaround for the Asynctcp WDT bug during long log download.
build_flags = 
	-D ENABLE_CORS
	-D CORS_ORIGIN=\"http://localhost:3000\"
    ; -D CONFIG_ASYNC_TCP_RUNNING_CORE
build_type = debug
lib_deps =
	ArduinoJson@>=6.0.0,<7.0.0
	https://github.com/me-no-dev/ESPAsyncWebServer
	knolleary/PubSubClient@>=2.8
	adafruit/Adafruit BMP280 Library@>=2.1.0
	adafruit/Adafruit BMP085 Library@>=1.1.0
	adafruit/DHT sensor library@>=1.4.0
	adafruit/Adafruit Unified Sensor@>=1.1.4
monitor_filters = colorize, esp32_exception_decoder


[env:esp12e]
platform = espressif8266
board = esp12e
board_build.f_cpu = 160000000L
lib_deps = gmag11/NtpClientLib@^3.0.2-beta

[env:node32s]
platform = espressif32
board = node32s
lib_deps = gmag11/NtpClientLib@^3.0.2-beta
